@page "/admin/login"

@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IConfiguration Configuration

<PageTitle>Admin Login</PageTitle>

<div class="container-fluid min-vh-100 d-flex align-items-center justify-content-center">
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
        <div id="loginErrorToast" class="toast align-items-center text-white bg-danger border-0 shadow-lg" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3000">
            <div class="d-flex">
                <div class="toast-body fw-bold">❕ Please provide valid username and password!</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <div class="card shadow-lg border-0 overflow-hidden login-card">
        <div class="row g-0">
            <div class="col-md-7 d-md-block bg-image">
                <img class="img-fluid w-100 h-100 object-fit-cover" loading="lazy" src="./assets/login.png" alt="Welcome!" style="object-fit: cover;">
            </div>
            <div class="col-12 col-md-5 d-flex align-items-center p-4">
                <div class="w-100">
                    <h2 class="text-center mb-4 fw-bold">🔑 Admin Login</h2>
                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <label for="username" class="form-label text-dark">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label text-dark">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                        </div>
                        <button type="submit" class="btn btn-gold btn-md w-100">🔒 Login</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

<style>

    .login-card {
        background: rgba(173, 168, 168, 0.6);
        border-radius: 8px;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px);
        max-width: 900px;
    }

    .btn-gold {
        background: linear-gradient(135deg, #d4af37, #b8860b);
        color: white !important;
        font-weight: bold;
    }

        .btn-gold:hover {
            background: linear-gradient(135deg, #b8860b, #8b6508);
            color: #fff;
            border-color: #ffffff8f;
        }
</style>

@code {
    private LoginModel loginModel = new();
    private List<LoginModel> adminCredentials = new();

    protected override void OnInitialized()
    {
        Configuration.GetSection("AdminCredentials").Bind(adminCredentials);
    }

    private async Task HandleLogin()
    {
        var isValidUser = adminCredentials.Any(cred => cred.Username == loginModel.Username && cred.Password == loginModel.Password);

        if (isValidUser)
        {
            NavigationManager.NavigateTo("/admin/reservations");
        }
        else
        {
            await JS.InvokeVoidAsync("showLoginErrorToast");
        }
    }
}
